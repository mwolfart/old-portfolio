{"version":3,"sources":["images/profile.jpg","images/mc1.png","images/mc2.png","images/mc3.png","images/dd1.png","images/dd2.png","images/dd3.png","images/hcm1.png","images/hcm2.png","images/hcm3.png","images/pd1.png","images/pd2.png","images/pd3.png","images/airacers1.png","images/airacers2.png","serviceWorker.js","components/SideBar.js","screens/Home.js","screens/MillenialsChallenge.js","screens/AITools.js","screens/ScreenList.js","screens/DangerousDave.js","screens/CowMaze.js","screens/PatasDadas.js","screens/PiggyBank.js","screens/LearnIt.js","screens/OSTools.js","screens/Compiler.js","index.js","components/MainCanvas.js"],"names":["module","exports","Boolean","window","location","hostname","match","SideBarButton","page","clickPage","onClick","className","icon","faChevronRight","fixedWidth","title","SideBarCategoryButton","pages","useState","expanded","setExpanded","pageLinkList","map","key","pageMenuClass","classNames","faChevronDown","color","SideBar","menuItems","menuPageSelectFn","categoryBtnList","category","item","sideBarClass","sideBarMenuClass","faBars","size","Home","href","src","profile","alt","faMapMarkerAlt","faEnvelope","faLinkedin","MillenialsChallenge","selectPageFn","mc1","mc2","mc3","MillenialsChallengePage2","faArrowCircleRight","faArrowCircleLeft","width","height","frameborder","allow","allowfullscreen","AITools","airacers1","airacers2","AIToolsPage2","ScreenList","class","dd1","dd2","dd3","hcm1","hcm2","hcm3","pd1","pd2","pd3","ReactDOM","render","curPage","setCurPage","screenTransition","setScreenTransition","transitionTimeout","setTransitionTimeout","screenClass","selectPage","clearTimeout","props","pg","setTimeout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05cf0b28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.4620059a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mc1.dc17bab6.png\";","module.exports = __webpack_public_path__ + \"static/media/mc2.4234fb53.png\";","module.exports = __webpack_public_path__ + \"static/media/mc3.fcbaedf8.png\";","module.exports = __webpack_public_path__ + \"static/media/dd1.f9fe0aee.png\";","module.exports = __webpack_public_path__ + \"static/media/dd2.94f7f0f7.png\";","module.exports = __webpack_public_path__ + \"static/media/dd3.ba7aa3bb.png\";","module.exports = __webpack_public_path__ + \"static/media/hcm1.fc3acee3.png\";","module.exports = __webpack_public_path__ + \"static/media/hcm2.c403e467.png\";","module.exports = __webpack_public_path__ + \"static/media/hcm3.d7b10304.png\";","module.exports = __webpack_public_path__ + \"static/media/pd1.a33e436a.png\";","module.exports = __webpack_public_path__ + \"static/media/pd2.1b3329bf.png\";","module.exports = __webpack_public_path__ + \"static/media/pd3.5d2fdedb.png\";","module.exports = __webpack_public_path__ + \"static/media/airacers1.24e0d52e.png\";","module.exports = __webpack_public_path__ + \"static/media/airacers2.0f827bc1.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classNames from 'classnames';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faChevronRight, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../styles/SideBar.sass\";\r\n\r\nconst SideBarButton = ({ page, clickPage }) => {\r\n  return(\r\n    <button onClick={() => clickPage(page)} className=\"sidebar__button sidebar__button--category\">\r\n      <FontAwesomeIcon\r\n        icon={ faChevronRight }\r\n        fixedWidth\r\n        className=\"sidebar__category-icon-hidden\"\r\n      />\r\n    {<div className=\"sidebar__category-title\">{page.title}</div>}\r\n    </button>\r\n  );\r\n}\r\n\r\nconst SideBarCategoryButton = ({ title, pages, clickPage }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const pageLinkList = pages.map((page) => (\r\n    <li key={page.title}>\r\n      <button \r\n        className=\"sidebar__button sidebar__button--page\"\r\n        onClick={ () => clickPage(page) }\r\n        >{ page.title }\r\n      </button>\r\n    </li>\r\n  ))\r\n\r\n  const pageMenuClass = classNames({\r\n    \"sidebar__page-menu\": true,\r\n    \"sidebar__page-menu--expanded\": expanded\r\n  });\r\n\r\n  return(\r\n    <div>\r\n      <button onClick={() => setExpanded(!expanded)} className=\"sidebar__button sidebar__button--category\">\r\n        <FontAwesomeIcon\r\n          icon={ (expanded ? faChevronDown : faChevronRight) }\r\n          color=\"#FFFFFF\"\r\n          fixedWidth\r\n        />\r\n      {<div className=\"sidebar__category-title\">{title}</div>}\r\n      </button>\r\n      <ul className={ pageMenuClass }>{ pageLinkList }</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const SideBar = ({ menuItems, menuPageSelectFn }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const createButton = (item) => {\r\n    if (item.pages) {\r\n      return (\r\n        <SideBarCategoryButton\r\n          title={item.title}\r\n          pages={item.pages}\r\n          clickPage={page => menuPageSelectFn(page)} \r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SideBarButton\r\n          page={item}\r\n          clickPage={page => menuPageSelectFn(page)} \r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  const categoryBtnList = menuItems.map((category) => (\r\n    <li key={category.title}>\r\n      { createButton(category) }\r\n    </li>\r\n  ));\r\n\r\n  const sideBarClass = classNames({\r\n    \"sidebar\": true,\r\n    \"sidebar--expanded\": expanded\r\n  });\r\n  const sideBarMenuClass = classNames({\r\n    \"sidebar__menu\": true,\r\n    \"sidebar__menu--expanded\": expanded\r\n  });\r\n\r\n  return (\r\n    <div className={ sideBarClass }>\r\n      <button onClick={() => setExpanded(!expanded)} className=\"sidebar__button sidebar__button--expanded\">\r\n        <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#FFFFFF\" fixedWidth />\r\n      </button>\r\n      <ul className={ sideBarMenuClass } >{categoryBtnList}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope, faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport profile from \"../images/profile.jpg\";\r\n\r\nexport const Home = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">Hello, and welcome to my page!</div>\r\n            <div className=\"screen-content__text-description\">Here you can find information about me and some projects I have done - most of them college projects (for now), but hopefully there will be more personal projects with better architectures in the future :)</div>\r\n            <div className=\"screen-content__text-description\">You can open each project's description in the toolbar at the left side of the page. Also, if you wish, you can find this project's repository <a href=\"https://bitbucket.org/mwolfart/own-portfolio/src/master/\">here</a>.</div>\r\n            <div className=\"screen-content__text-title\">About me</div>\r\n            <div className=\"screen-content__text-description\">I am a computer science undergraduate who likes front-end stuff and, in the spare time, I like playing games, singing and looking for new music. Despite preferring front-end I also like to explore different areas of programming and learn new technologies.</div>\r\n        </div>\r\n        <div className=\"screen-content__right-panel\">\r\n            <img src={profile} alt=\"Profile\" className=\"image--square\" />\r\n            { \"Murilo Wolfart\" }\r\n            <div className=\"screen-content__personal-data-container\">\r\n                <div className=\"screen-content__personal-data-column\">\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} fixedWidth className=\"screen-content__personal-data-icon\" />\r\n                    <FontAwesomeIcon icon={faEnvelope} fixedWidth className=\"screen-content__personal-data-icon\" />\r\n                    <FontAwesomeIcon icon={faLinkedin} fixedWidth className=\"screen-content__personal-data-icon\" />\r\n                </div>\r\n                <div className=\"screen-content__personal-data-column\">\r\n                    <span className=\"screen-content__personal-data-icon\" >Porto Alegre, RS, Brazil</span>\r\n                    <span className=\"screen-content__personal-data-icon\" >mwolfart@gmail.com</span>\r\n                    <span className=\"screen-content__personal-data-icon\" >Murilo Wolfart</span>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    </div>;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleRight, faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport mc1 from \"../images/mc1.png\";\r\nimport mc2 from \"../images/mc2.png\";\r\nimport mc3 from \"../images/mc3.png\";\r\n\r\nexport const MillenialsChallenge = ({ selectPageFn }) =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">Millenial's Challenge</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is a Unity game developed along with Juliano Carmona Ferreira Jardim as a college assignment. \r\n                The game is a 3D third person puzzler based on a 1989 game called \"Chip's Challenge\" (developed for Windows 95 as part of Microsoft Entertainment Pack). The player must collect Wi-Fi icons throughout the level and reach its exit, represented by a smartphone. There are many obstacles in each level, such as enemies, pushable blocks, traps, locked doors, etc. which provide more fun to the game.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Tools used</div>\r\n            <div className=\"screen-content__text-description\">\r\n                Besides Unity and C#, the team also used Blender in order to create some 3D models (although most of them were taken from the Unity store), as well as BitBucket for system versioning.\r\n            </div>\r\n        </div>\r\n        <div className=\"screen-content__right-panel\">\r\n            <img src={mc1} alt=\"Millenial's Challenge screenshot 1\" className=\"image--rectangular-big\" />\r\n            <img src={mc2} alt=\"Millenial's Challenge screenshot 2\" className=\"image--rectangular-big\" />\r\n            <img src={mc3} alt=\"Millenial's Challenge screenshot 3\" className=\"image--rectangular-big\" />\r\n        </div>\r\n        <div className=\"screen-content__arrow-container\">\r\n            <button onClick={() => selectPageFn(MillenialsChallengePage2)} className=\"screen-content__arrow-button\" title=\"Gameplay video\">\r\n                <FontAwesomeIcon size=\"3x\" icon={faArrowCircleRight} fixedWidth className=\"screen-content__arrow-icon\"/>\r\n            </button>\r\n        </div>\r\n    </div>;\r\n\r\nexport const MillenialsChallengePage2 = ({ selectPageFn }) =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__arrow-container\">\r\n            <button onClick={() => selectPageFn(MillenialsChallenge)} className=\"screen-content__arrow-button\" title=\"Project description\">\r\n                <FontAwesomeIcon size=\"3x\" icon={faArrowCircleLeft} fixedWidth className=\"screen-content__arrow-icon\"/>\r\n            </button>\r\n        </div>\r\n        <div className=\"screen-content__text-panel\">\r\n            <div className=\"screen-content__text-title\">Gameplay</div>\r\n            <div className=\"screen-content__text-description\">\r\n                Below is a video showing the gameplay of Millenial's Challenge level 01. Gameplay videos for level 02 and 03 can be found <a href=\"https://youtu.be/GuPiVk4cFJg\">here</a> and <a href=\"https://youtu.be/jyRXoygfuSY\">here</a>, respectively.\r\n            </div>\r\n            <div className=\"screen-content__text-video\">\r\n                <iframe title=\"Millenial's Challenge video\" width=\"560\" height=\"250\" src=\"https://www.youtube.com/embed/XQX37-c8pZk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Repository & download</div>\r\n            <div className=\"screen-content__text-description\">\r\n                Version 0.4 of the game is available at <a href=\"https://drive.google.com/open?id=1oZiKPezKUxzMQTA6vb8oKWr4-RamezQ_\">the author's Google Drive</a>.\r\n            <br/><br/>\r\n                The game is also available at its <a href=\"https://bitbucket.org/mwolfart/pcg-millenials-challenge-2/src/master/\">BitBucket repository</a>, however some of the assets are not present due to storage issues (they were stored separately in Google Drive). If you want to build the project in your machine, please contact the authors.\r\n            </div>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleRight, faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport airacers1 from \"../images/airacers1.png\";\r\nimport airacers2 from \"../images/airacers2.png\";\r\n\r\nexport const AITools = ({ selectPageFn }) =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">AI Tools</div>\r\n            <div className=\"screen-content__text-description\">\r\n                During the courses INF01048 (Inteligência Artificial) and INF01017 (Aprendizado de Máquina) I had to develop some projects using artificial intelligence along with classmates. Here you can find a brief description of some of them\r\n            </div>\r\n            <div className=\"screen-content__text-title\">AI Racers</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is an algorithm that teaches itself on how to play a racing game and perform good results. The project consisted of two phases, both developed in Python. The first one used local approximation algorithms (such as hill climbing, simulated annealing and genetic algorithms). The second used a Q-Learning algorithm.\r\n                You can access the repositories <a href=\"https://bitbucket.org/mwolfart/ia-super-ultimate-smart-racer-deluxe-goty-edition/src/master/\">here</a> (phase 1) and <a href=\"https://bitbucket.org/mwolfart/ia-super-car-racer-new-golden-edition-master-levels-goty/src/master/\">here</a> (phase 2). Since the application is a little complex to run, please contact me if you want to do so.\r\n            </div>\r\n        </div>\r\n        <div className=\"screen-content__right-panel\">\r\n            <img src={airacers1} alt=\"AI Racers phase 1\" className=\"image--rectangular-big\" />\r\n            <img src={airacers2} alt=\"AI Racers phase 2\" className=\"image--rectangular-big\" />\r\n        </div>\r\n        <div className=\"screen-content__arrow-container\">\r\n            <button onClick={() => selectPageFn(AIToolsPage2)} className=\"screen-content__arrow-button\" title=\"Next\">\r\n                <FontAwesomeIcon size=\"3x\" icon={faArrowCircleRight} fixedWidth className=\"screen-content__arrow-icon\"/>\r\n            </button>\r\n        </div>\r\n    </div>;\r\n\r\nexport const AIToolsPage2 = ({ selectPageFn }) =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__arrow-container\">\r\n            <button onClick={() => selectPageFn(AITools)} className=\"screen-content__arrow-button\" title=\"Back\">\r\n                <FontAwesomeIcon size=\"3x\" icon={faArrowCircleLeft} fixedWidth className=\"screen-content__arrow-icon\"/>\r\n            </button>\r\n        </div>\r\n        <div className=\"screen-content__text-panel\">\r\n            <div className=\"screen-content__text-title\">Random Forests</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is an application that implements a fully operational random forest algorithm. It was developed in Python along with my classmate Juliano Jardim. You can find the project repository <a href=\"https://bitbucket.org/mwolfart/ml-random-forests-of-illusion/src/master/\">here</a>. In the root folder there is a report (in portuguese) containing details about the implementation and how to run it.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Neural Networks</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is an application that implements a neutral network algorithm. It was also developed with Juliano as the second assignment for the same course. You can find the project repository along with the project report <a href=\"https://bitbucket.org/mwolfart/ml-big-boos-neural-network-of-haunted-tunnels/src/master/\">here</a>.\r\n            </div>\r\n        </div>\r\n    </div>;","import { Home } from \"./Home\";\r\nimport { MillenialsChallenge } from \"./MillenialsChallenge\";\r\nimport { DangerousDave } from \"./DangerousDave\";\r\nimport { CowMaze } from \"./CowMaze\";\r\nimport { PatasDadas } from \"./PatasDadas\";\r\nimport { PiggyBank } from \"./PiggyBank\";\r\nimport { LearnIt } from \"./LearnIt\";\r\nimport { Compiler } from \"./Compiler\";\r\nimport { AITools } from \"./AITools\";\r\nimport { OSTools } from \"./OSTools\";\r\n\r\nexport const ScreenList = [\r\n    { title: \"Home\", class: Home },\r\n    { title: \"Games\", pages: [\r\n      { title: \"Millenial's Challenge\", class: MillenialsChallenge },\r\n      { title: \"Dangerous Dave\", class: DangerousDave },\r\n      { title: \"The Homogeneous Cow Maze\", class: CowMaze }\r\n    ] },\r\n    { title: \"Web projects\", pages: [\r\n      { title: \"Patas Dadas internal system\", class: PatasDadas },\r\n      { title: \"Piggy Bank\", class: PiggyBank },\r\n      { title: \"LearnIt\", class: LearnIt }\r\n    ] },\r\n    { title: \"Shell applications\", pages: [\r\n      { title: \"OS Tools\", class: OSTools },\r\n      { title: \"AI Tools\", class: AITools },\r\n      { title: \"Code Compiler\", class: Compiler }\r\n    ] }\r\n];","import React from \"react\";\r\nimport dd1 from \"../images/dd1.png\";\r\nimport dd2 from \"../images/dd2.png\";\r\nimport dd3 from \"../images/dd3.png\";\r\n\r\nexport const DangerousDave = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">Dangerous Dave replica</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This Python project was developed as a final assignment for the course INF01121 (Modelos de Linguagens de Programação), with the goal to experiment the different types of paradigms of a programming language. It is a replica of the 1988 game <a href=\"https://en.wikipedia.org/wiki/Dangerous_Dave\">Dangerous Dave</a> by John Romero, the only major difference being the absence of the enemies due to lack of development time. The project contains all 10 levels along with all bonus rooms.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Tools used</div>\r\n            <div className=\"screen-content__text-description\">\r\n                The project uses the pygame Python library to render the graphics and display. Since the goal of the project was to understand different types of paradigms, there are two types of implementation: one which is full-OO and another which contains OO and functional elements. The functional part of the second implementation was made converting some of the helper functions to the said paradigm.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Repository</div>\r\n            <div className=\"screen-content__text-description\">\r\n                To play the game you can clone <a href=\"https://bitbucket.org/mwolfart/mlp-dangerous-dave/src/master/\">its repository</a> and run \"python main_oo.py\" under the command line in the root folder.\r\n            </div>\r\n        </div>\r\n        <div className=\"screen-content__right-panel\">\r\n            <img src={dd1} alt=\"Dangerous Dave screenshot 1\" className=\"image--rectangular-big\" />\r\n            <img src={dd2} alt=\"Dangerous Dave screenshot 2\" className=\"image--rectangular-big\" />\r\n            <img src={dd3} alt=\"Dangerous Dave screenshot 3\" className=\"image--rectangular-big\" />\r\n        </div>\r\n    </div>;","import React from \"react\";\r\nimport hcm1 from \"../images/hcm1.png\";\r\nimport hcm2 from \"../images/hcm2.png\";\r\nimport hcm3 from \"../images/hcm3.png\";\r\n\r\nexport const CowMaze = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">The Homogeneous Cow Maze</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is a C++ project developed for the course INF01047 (Computação Gráfica). It is a 3D game based on the 1989 game called \"Chip's Challenge\" (just like Millenial's Challenge), developed using only the C++ language and the OpenGL library. The goal of the project was to understand how OpenGL library works and how to render graphics with it.\r\n                As for the game itself, the goal is to collect all baby cows (light-blue) in each level and go to the \"Mother Cow\", while avoiding obstacles and making use of tools such as keys and movable blocks.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Tools used</div>\r\n            <div className=\"screen-content__text-description\">\r\n                The project was mainly built using CodeBlocks and the OpenGL library. Some external 3D models were downloaded for the keys and cows. Textures were all downloaded from the internet. Part of the rendering functions were developed during the course, but most of the game logic was developed directly for the assignment.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Repository</div>\r\n            <div className=\"screen-content__text-description\">\r\n                To play the game you can clone <a href=\"https://bitbucket.org/mwolfart/fcg-the-homogeneous-cow-maze/src/master/\">its repository</a> and run the executable under /bin/debug.\r\n            </div>\r\n        </div>\r\n        <div className=\"screen-content__right-panel\">\r\n            <img src={hcm1} alt=\"Homogeneous Cow Maze screenshot 1\" className=\"image--rectangular-big\" />\r\n            <img src={hcm2} alt=\"Homogeneous Cow Maze screenshot 2\" className=\"image--rectangular-big\" />\r\n            <img src={hcm3} alt=\"Homogeneous Cow Maze screenshot 3\" className=\"image--rectangular-big\" />\r\n        </div>\r\n    </div>;","import React from \"react\";\r\nimport pd1 from \"../images/pd1.png\";\r\nimport pd2 from \"../images/pd2.png\";\r\nimport pd3 from \"../images/pd3.png\";\r\n\r\nexport const PatasDadas = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">Patas Dadas internal system</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This was a small project made for the course INF01022 (Laboratório de Sistemas de Software). It was supposed to be an internal management system for the local Porto Alegre NGO Patas Dadas, so that they could manage their supplies and pets available for adoption. The website was, however, discontinued.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">Tools used</div>\r\n            <div className=\"screen-content__text-description\">\r\n                The project is a Java Spring website with a jQuery/JS frontend. Bootstrap was used in order to help with the website design. The team was formed by the alumni Jéssica Rocha, Taiane Oliveira and me, with Jéssica being mainly responsible by the backend while Taiane and I worked on the frontend (despite all teammates working occasionally in all parts of the application). \r\n            </div>\r\n            <div className=\"screen-content__text-title\">Repository & Application</div>\r\n            <div className=\"screen-content__text-description\">\r\n                Project repository is available at <a href=\"https://bitbucket.org/mwolfart/sistema-patas-dadas/src/master/\">BitBucket</a>. Unfortunately the website is not available at the time since it was discontinued, but you can check some screenshots in the panel to the right.\r\n            </div>\r\n        </div>\r\n        <div className=\"screen-content__right-panel\">\r\n            <img src={pd1} alt=\"Patas Dadas internal system screenshot 1\" className=\"image--rectangular-big\" />\r\n            <img src={pd2} alt=\"Patas Dadas internal system screenshot 2\" className=\"image--rectangular-big\" />\r\n            <img src={pd3} alt=\"Patas Dadas internal system screenshot 3\" className=\"image--rectangular-big\" />\r\n        </div>\r\n    </div>;","import React from \"react\";\r\n\r\nexport const PiggyBank = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel\">\r\n            <div className=\"screen-content__text-title\">Piggy Bank</div>\r\n            <div className=\"screen-content__text-description\">\r\n            This page is work in progress. Hopefully there will be something here pretty soon :)\r\n            </div>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\n\r\nexport const LearnIt = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel screen-content__text-panel--left-block\">\r\n            <div className=\"screen-content__text-title\">LearnIt</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This page is work in progress. Hopefully there will be something here pretty soon :)\r\n            </div>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\n\r\nexport const OSTools = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel\">\r\n            <div className=\"screen-content__text-title\">OS Tools</div>\r\n            <div className=\"screen-content__text-description\">\r\n                During the course INF01142 (Sistemas Operacionais), I developed two shell applications along with two classmates - Daniel Kelling Brum and Jéssica Rocha. Here you can find a brief description of each of them and a link to their repositories. Both projects are developed using C.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">cthreads</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is a multithread library that the user can import to their project and work with. Various functions are implemented to manage the threads (creation, locking, releasing, etc). The team has split similar group of functions (in terms of difficulty) for each member. \r\n                You can find the project repository <a href=\"http://bitbucket.org/mwolfart/sisop-i-cthreads/src\">here</a>, and in order to use the library you can build the Makefile and import the file libcthread.a under the lib folder.\r\n            </div>\r\n            <div className=\"screen-content__text-title\">T2FS</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is a custom operational file system. It contains many functions to manage files and folders, such as listing files, creation of directories, file relocation, etc. - basically all simple commands that are present in any Unix system.\r\n                In this project the team has also split roles, but many helper functions were implemented in order to provide a more readable code base, and some of the hardest functions were implemented by all members during a virtual coding meeting.\r\n                You can find the project repository <a href=\"http://bitbucket.org/mwolfart/sisop-i-t2fs/src/master/\">here</a>. In order to use the file system you can build the Makefile and import the file libt2fs.a under the lib folder.\r\n            </div>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\n\r\nexport const Compiler = () =>\r\n    <div className=\"screen-content__main-panel\">\r\n        <div className=\"screen-content__text-panel\">\r\n            <div className=\"screen-content__text-title\">Code Compiler</div>\r\n            <div className=\"screen-content__text-description\">\r\n                This is a project made for the course INF01147 (Compiladores). It is a compiler build in C in order to interpret a fictional language made by the professor. The project is separated in seven cumulative parts: lexical analyzer, syntax analyzer, AST generator, semantic analyzer, three-address code generator, and two optimizations.\r\n                The project repository is located <a href=\"https://bitbucket.org/mwolfart/compiladores-trabalho/src/new-master/\">here</a>. In order to build the compiler you can run the Makefile for the desired part of the project. \r\n            </div>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/themes/theme3.sass\";\r\nimport \"./index.css\";\r\n//import App from './App';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { MainCanvas } from './components/MainCanvas';\r\n\r\nReactDOM.render(<MainCanvas />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from \"react\";\r\nimport classNames from 'classnames';\r\n\r\nimport \"../styles/MainCanvas.sass\";\r\nimport \"../styles/ScreenContent.sass\";\r\nimport \"../styles/Images.sass\";\r\n\r\nimport { SideBar } from \"./SideBar\";\r\nimport { ScreenList } from \"../screens/ScreenList\";\r\nimport { Home } from \"../screens/Home\";\r\n\r\nexport function MainCanvas() {\r\n  const [curPage, setCurPage] = useState(Home);\r\n  const [screenTransition, setScreenTransition] = useState(false);\r\n  const [transitionTimeout, setTransitionTimeout] = useState(null);\r\n\r\n  const selectPage = (page) => {\r\n    clearTimeout(transitionTimeout);\r\n    setScreenTransition(true);\r\n    const props = { selectPageFn: (pg) => selectPage(pg) };\r\n\r\n    setTransitionTimeout(setTimeout(() => {\r\n      setCurPage(page(props) || ScreenList[0].class(props));\r\n      setScreenTransition(false);\r\n    }, 300));\r\n  };\r\n\r\n  const screenClass = classNames({\r\n    \"screen-content__selected-screen\": true,\r\n    \"screen-content__selected-screen--hidden\" : screenTransition\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-canvas\">\r\n      <SideBar\r\n        menuItems={ScreenList}\r\n        menuPageSelectFn={page => selectPage(page.class)}\r\n      />\r\n      <div className=\"screen-content\">\r\n        <div className={ screenClass }>\r\n          {curPage}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}